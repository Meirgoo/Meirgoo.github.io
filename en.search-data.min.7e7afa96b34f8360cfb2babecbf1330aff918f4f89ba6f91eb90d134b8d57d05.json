[{"id":0,"href":"/docs/tech/adobe/","title":"Adobe安装","section":"技术分享","content":"\r最简单的Adobe全家桶安装（仅适用最新版）\r#\r前言\r#\r谈及多媒体处理，Adobe的软件是绕不开的一个话题，相关资源和教程也是一抓一大把，这里就老调重弹，分享一下我自己的安装方案。\n诶，不就一个软件安装，点一下的事嘛，怎么还有这种那种方案呢？\n众所周知，Adobe软件是每年都有更新的，而且官方会提供一些插件，当然可以选择一个破解的固定版本使用，但如果想要使用最新版以及插件，那更新是绕不过去的，况且安装包的下载也是个问题，动辄十几二十几GB的安装包，没有哪家会无偿提供这么大的下载带宽，多数网盘的分享方案也不能指望网盘的小水管慢慢下载，加速又是一笔费用。\n因此我常用的一套方案就是官方下载加第三方破解，网速完全利用，也非常省心，缺点就是只能下载最新版，对系统配置有一定要求，这也是软件升级的负面效果，如果电脑配置还不错的话，那可以尝试一下这套方案。\n准备\r#\r网络连接 满足需要安装软件的配置，Acrobat一般没什么要求，图像音频等处理一般要求16GB以上内存，视频处理一般需要独立显卡。 步骤\r#\r前往 https://www.adobe.com/download/creative-cloud 下载创意云并且安装，过程可能需要注册一个账户，直接注册登录就可以。\n安装后所有软件都会显示使用，不要管，直接关闭软件，不要试用。\n下载文件 https://wwuj.lanzoul.com/iNd4b2tmlgne 并启动。如果显示被Windows defender阻止，点击该通知，在显示的威胁下面选择“允许在设备上”并且执行操作后重新运行，软件被删了就重新解压一个。\n运行GenP，点击Search，等待软件自动搜索安装的Adobe软件，搜索完成后点击Patch。在这个过程中软件会自动关闭Adobe创意云并完成破解。\n重新打开Adobe创意云，如果成功破解则会发现所有试用选项消失，变成下载，此时可以随意安装软件，包括官方提供的插件，注意安装完成后不要打开任何软件。\n安装完成后重复第四步一次，此时会把所有安装的Adobe软件破解，如果打开软件没有试用提示即破解完成，之后可以随意运行。\n如果需要更新软件或者安装插件，可以使用创意云直接更新或者安装，安装完成后重新运行一次破解流程即可。\n特殊情况\r#\r如果破解失败可通过邮件通知我检查破解软件更新。\n"},{"id":1,"href":"/docs/tech/hugo-book/","title":"Hugo Book主题","section":"技术分享","content":"\rHugo book主题说明书\r#\r前言\r#\r如你所见，本站所用的Hugo主题为book主题，一款非常简洁的主题，不过这款主题的配置项比较多，且对文件组织结构有一定要求，也是可以深入探讨一下的。\n主题的安装可以参考我的另一篇文章，假定已经安装完成了该主题。\n需求\r#\rHugo 0.134或更高版本的扩展版本。\n站点设置\r#\r该主题支持部分站点设置：\n# (可选) 设置谷歌分析，如果你用它来跟踪你的网站。\r# 总是把它放在配置文件的顶层，否则它将不起作用。\rgoogleAnalytics = \u0026#34;UA-XXXXXXXXX-X\u0026#34;\r# (可选) 如果您提供Disqus短名称，则注释将在所有页面被启用。\rdisqusShortname = \u0026#34;my-site\u0026#34;\r# (可选) 如果在文件名中使用大写字母，则将此设置为true。\rdisablePathToLower = true\r# (可选) 将此设置为true以在\u0026#39;doc\u0026#39;类型页面启用包括日期和作者的\u0026#39;最后修改\u0026#39;信息。\renableGitInfo = true\r# (可选) 主题用于文档使用，因此它不渲染taxonomy。\r#你可以在config下删除相关文件\rdisableKinds = [\u0026#39;taxonomy\u0026#39;, \u0026#39;taxonomyTerm\u0026#39;]\r[params]\r# (可选, 默认light) 设置颜色主题：浅色，深色或自动。\r# \u0026#39;自动\u0026#39;主题会根据浏览器/操作系统的偏好在暗模式和亮模式之间切换。\rBookTheme = \u0026#39;light\u0026#39;\r# (可选, 默认true) 控制页面右侧的目录可见性。\r# 开始和结束级别可以用markup.tableOfContents来控制\r# 也可以在文件头中为每个页面指定此参数。\rBookToC = true\r# (可选, 默认none) 将该路径文件设置为书的徽标。如果logo是/static/logo.png则路径为\u0026#39;logo.png\u0026#39;\rBookLogo = \u0026#39;logo.png\u0026#39;\r# (可选, 默认docs) 指定要呈现为站点目录的内容部分。您也可以设置值为\u0026#34;*\u0026#34;，以渲染所有的部分到菜单\rBookSection = \u0026#39;docs\u0026#39;\r# 设置源存储库位置，用于\u0026#34;上次修改\u0026#34;和\u0026#34;编辑此页\u0026#34;链接。\rBookRepo = \u0026#39;https://github.com/alex-shpak/hugo-book\u0026#39;\r# 为\u0026#39;doc\u0026#39;页指定指向该页上次修改的提交散列的链接的提交部分类型。\r#如果设置了\u0026#39;BookRepo\u0026#39;参数，则必需。\r#用于构造由BookRepo/BookCommitPath/\u0026lt;commit-hash\u0026gt;组成的URL的值\r# Github使用\u0026#39;commit\u0026#39;， Bitbucket使用\u0026#39;commits\u0026#39;\rBookCommitPath = \u0026#39;commit\u0026#39;\r# 为\u0026#39;doc\u0026#39;页面类型启用\u0026#34;编辑此页\u0026#34;链接。\r# 默认禁用。取消注释以启用。需要\u0026#39;BookRepo\u0026#39;参数。\r# Path必须指向站点目录。\rBookEditPath = \u0026#39;edit/master/exampleSite\u0026#39;\r# (可选, 默认January 2, 2006) 配置页面上使用的日期格式\r# - 在git信息中\r# - 在博客文章中\rBookDateFormat = \u0026#39;Jan 2, 2006\u0026#39;\r# (可选, 默认true) 启用flexsearch搜索功能，\r# 索引是建立在fly，因此它可能会减慢你的网站。\r# 索引的配置可以在每个语言的i18n文件夹中进行调整。\rBookSearch = true\r# (可选, 默认true) 在页面上启用评论。\r# 默认partials/docs/comments.html包含Disqus模板。\r# 参见https://gohugo.io/content-management/comments/#configure-disqus。\r# 可以被相同的参数覆盖在文件头。\rBookComments = true\r# /!\\ 这是一个实验性的功能，可能会在任何时候被删除或更改。\r# (可选，实验性的，默认为false) 在Markdown页面中启用可移植链接和链接检查。\r# 可以指链接意味着与文本编辑器一起工作，让您在没有{\u0026lt; relref \u0026gt;}短代码的情况下编写Markdown。\r如果在markdown中引用的页面不存在，主题将打印警告。\rBookPortableLinks = true\r# /!\\ 这是一个实验性的功能，可能会在任何时候被删除或更改。\r# (可选，实验性的，默认为false) 启用service worker缓存访问过的页面和资源以供离线使用。\rBookServiceWorker = true 文档组织\r#\r默认情况下，主题会从 content/docs 目录下渲染文章结构，如果在这个位置新建Markdown文档会自动生成带有title和weight的文件头，比如新建立的这篇文章就有如下文件头：\n---\rtitle: \u0026#34;Hugo Book主题\u0026#34;\rweight: 1\r# bookFlatSection: false\r# bookToc: true\r# bookHidden: false\r# bookCollapseSection: false\r# bookComments: false\r# bookSearchExclude: false\r--- 这里的title是标题栏显示的标题，权重是在左侧菜单列表中的排列权重，数字越小排序越靠前，同权重会以字符顺序排列。\n下面的六个选项默认是注释状态，启用需要删除掉前面的井号，原文档对这些可选参数解释如下：\n# 如果你想在配置的部分之外渲染页面，或者渲染的部分不是\u0026#34;docs\u0026#34;，则将type设置为\u0026#34;docs\u0026#34;\rtype = \u0026#39;docs\u0026#39;\r# 设置页面权重以重新排列文件树菜单中的项目。\rweight = 10\r# (可选) 设置为\u0026#34;true\u0026#34;以在文件树菜单中将页面标记为flat部分。\rbookFlatSection = false\r# (可选) 设置隐藏该级别的嵌套部分或页面。仅适用于文件树菜单模式。\rbookCollapseSection = true\r# (可选) 设置为true以隐藏左侧网站侧边菜单中的页面或部分。\rbookHidden = false\r# (可选) 设置\u0026#34;false\u0026#34;以隐藏右侧文章内容标题索引。\rbookToC = true\r# (可选) 如果您已经为站点启用了评论功能，则可以对特定页面禁用它。\rbookComments = true\r# (可选) 设置为\u0026#34;false\u0026#34;以从搜索索引中排除页面。\rbookSearchExclude = true\r# (可选) 在菜单中为该页设置显式的链接属性。\rbookHref = \u0026#39;\u0026#39; 短代码\r#\r在hugo-boook中自带七种短代码，以支持在页面中嵌入部分组件,由于默认情况下，渲染器会组织不安全的输出，因此首先需要在配置文件中加入如下设置：\n[markup]\r[markup.goldmark.renderer]\runsafe = true 按钮\r#\r按钮支持作为一种样式化的链接以链接到本地页面或者外部链接。\n{{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Home{{\u0026lt; /button \u0026gt;}}\r{{\u0026lt; button href=\u0026#34;https://github.com/\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}} 效果如下：\nHome\rGithub\r多列\r#\r多列帮助水平组织碎片化短内容。\n{{% columns [ratio=\u0026#34;1:1\u0026#34;] [class=\u0026#34;...\u0026#34;] %}}\r#### 左内容\r这里是左侧内容。\r\u0026lt;---\u0026gt;\r#### 中内容\r这里是中间内容。\r\u0026lt;---\u0026gt;\r#### 右内容\r这里是右侧内容。\r{{% /columns %}} 结果如下：\n左内容\r#\r这里是左侧内容。\n中内容\r#\r这里是中间内容。\n右内容\r#\r这里是右侧内容。\n不同宽度的多列\r#\r{{% columns ratio=\u0026#34;1:2\u0026#34; %}} #### 一倍宽度内容 这里是一倍宽度内容。 \u0026lt;---\u0026gt; #### 两倍宽度内容 这里是两倍宽度内容容容容容容容容容容。 {{% /columns %}} 一倍宽度内容\r#\r这里是一倍宽度内容。\n两倍宽度内容\r#\r这里是两倍宽度内容容容容容容容容容容。\n"},{"id":2,"href":"/docs/tech/hugo/","title":"Hugo建站","section":"技术分享","content":"\r在网上圈出一亩三分地-你最靠谱的静态网站上线指南（施工现场）\r#\r前言\r#\r个人建站的热潮还是在零几年，那时候互联网就像一片无限大的荒原，也有一批站长在那个时间发家致富。可以确定的是，现在已经不是当时那个遍地都是机会的时代，但互联网依然是那片几乎无限大的土地，大到任何人都可以在中间几乎零成本的圈出自己的一块地。本文会教你如何划出自己的一块地皮。\n准备\r#\r如你所见这个页面就是基于Hugo（雨果）部署在Github Pages的一个静态站点，之后的内容也基于这一点。\n为此你需要准备：\n一点点英语和计算机基础。后续的操作大多是英语界面，也需要使用命令行操作，完全不会也不是不行，靠网页翻译和说明硬啃吧，难度肯定会更大。\nwindows10或者windows11操作系统。\nlinux本身命令行操作会更简单一些，并且可以默认linux用户基础更好，资料更全，考虑到中文用户大多应该是windows系统，故以windows为主\n可以访问Github的网络环境。Github是全球最大的开源社区，这里使用Github提供的Pages功能，该功能支持为项目部署静态网站（免费，但有一定使用限制），由于Github在国内存在DNS污染，因此访问Github对网络提供商，地点等等有一定要求，可以访问github.com测试，如果无法访问需要自行查找解决方案。\n可以访问时自行使用邮箱注册账户。\n步骤\r#\r打开系统的Microsoft Store，即微软商店，在windows10和windows11内置，如果被卸载，可参考我的脚本列表中恢复命令。\n安装/更新 App Installer，该软件是微软官方的包管理器，安装该软件后可以用命令行安装软件，省去大量操作步骤。\n以管理员模式运行powershell，使用win（徽标键，标准键盘空格左边第二个）+R打开运行，输入powershell，之后按ctrl+shift+enter（同时按住ctrl和shift同时点一下回车），如果弹出授权，同意即可，当能看到一个蓝色窗口时，欢迎来到命令行的世界。\n命令行的操作是输入指令按回车执行，后续一切该操作不做说明。运行\nwinget 如果能看到一串列表，那么说明包管理器正常。\n换源，winget的内置源或许并不适合国内网络环境的访问，这里使用的是中科大的源，有其他的源可以把ustc更换为任意名称，链接更换为源地址。\nwinget source add ustc https://mirrors.ustc.edu.cn/winget-source 想要检查有什么源可以使用：\nwinget source list 想要移除源可以使用（将星号以及星号之间的内容更换为源列表的名称）：\nwinget source remove *winget* 想恢复默认源可以：\nwinget source reset --force 安装hugo，可以使用以下指令检查是否可以从源搜索到软件：\nwinget search hugo 如果无法搜索到软件需要再检查是否成功配置源以及网络连接。之后安装Hugo。如果顺利搜索，可以看到这里有Hugo的三个不同版本，分别是标准版，扩展版和开发版，开发版并不适合一般用户使用，部分主题需要使用扩展版，因此一步到位直接安装扩展版Hugo。\nwinget install Hugo.Hugo.Extended 同时再顺便安装一个git，等下要用。\nwinget install git.git 关闭powershell，开启一个新的无管理员权限的powershell，这里务必使用无管理员权限的powershell运行，因为两者默认路径是不同的，第5步中由于换源，路径在系统目录下，现在需要在用户目录下进行下一步，因此直接新建无管理员权限的powershell最直接。使用指令：\nhugo 如果看到如下输出表示软件安装无误:\nTotal in 1 ms\rError: Unable to locate config file or config directory. Perhaps you need to create a new site.\rRun `hugo help new` for details. 确认建站位置，你的个人网站是需要一个文件夹用来存放的，在上一步中刚开启的powershell默认执行路径是用户文件夹，，即“C:\\Users\\My\\用户名”，也是打开文件管理器看到左侧一串桌面等文件夹的上一级，对于没有学过命令行操作的用户来说，可以使用这样几个指令在命令行中操作文件夹。\n进入目录:\ncd 目录名 回到上一级目录，这里的两个点表示上一级，注意是英文模式下的句号：\ncd .. 创建新目录：\nmkdir 目录名 比如如果想要在用户目录下新建一个站点目录，并且在里面创建站点FirstSite应该怎么办呢？\nmkdir site\rcd site\rhugo new site FirstSite\rcd FirstSite 完成这一步，就会有一个site\\FirstSite目录作为站点的根目录，同时进入这个目录下，之后的所有操作都要在这里进行，也就是每次操作网站都需要先打开一个无管理员权限的powershell，然后使用cd指令进入根目录处理。\n创建完网站后是没有默认主题的，可以在 https://themes.gohugo.io/ 处寻找喜欢的主题，想要使用这些主题，需要先在网站根目录创建一个git仓库，使用如下指令：\ngit init 然后在喜欢的主题下面找到下载，进入得到对应的项目地址，使用如下指令将主题作为子模块克隆到本地网站根目录，这里实例使用了hugo官方的实例，可以根据个人选择修改网址，需要注意的是，不同的主题可能支持不同的特性，可能需要根据需求查看原文档获取详细的使用方法，本站所使用的主题为Book，后面我会单独发一篇文章分享该主题的详细设置：\ngit submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke 克隆完主题后需要设置网站使用的主题，Hugo官方给出的是使用指令：\necho \u0026#34;theme = \u0026#39;ananke\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml 这里我个人不推荐使用该方法，因为powershell和本地编码的问题，有时候或许会插入一些错误字符，个人建议直接打开网站根目录下的hugo.toml直接进行配置。在该文件中配置title后面单引号字符串为网站标题，baseURL为网站根域名，如果这里没有的话暂时不做处理，在title下面新开一行theme，后面的字符串为网站根目录下themes中的主题文件夹的文件夹名，如果配置好了应该是这样的：\nbaseURL = \u0026#39;https://meirgoo.net/\u0026#39;\rlanguageCode = \u0026#39;zh-cn\u0026#39;\rtitle = \u0026#39;Meirgoo Site\u0026#39;\rtheme = \u0026#39;hugo-book\u0026#39;\r[caches]\r[caches.images]\rdir = \u0026#39;:cacheDir/images\u0026#39; 完成这些步骤后使用如下命令就可以在本地看到自己的网站了:\nhugo server 此时网站会自动编译并且部署到本地服务器，如果看到输出的结尾是：\nWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1)\rPress Ctrl+C to stop 那就说明编译部署成功，此时可以在浏览器访问链接中的地址看到自己的网站了，如果想要退出，可以在powershell中使用ctrl+C组合键，或者直接关闭powershell都是可以的。\n在上一步中已经成功使用hugo完成了静态站点的建立，并且成功渲染，但是只能在本地访问，现在想要把网站部署到网络上允许公开访问，可能有部分人认为部署网站需要服务器、域名，如果在国内还有备案要求等等，但事实上这些绝大部分并不是必须的，如果想要一个动态的网站，那么一台服务器基本是必不可少的，如果是纯粹的静态网站，目前已经有了许多种免费方案，虽然在带宽流量方面略有限制，但是对访问量不高的个人小站点来说绝对是绰绰有余，我个人用过的方案有vercel和github page，本文选择使用github page方式实现。\n在之前的步骤中已经使用了git安装主题，因此到了这一步默认已经安装好git，如果没有，返回到第六步安装git。\n什么是git，简单来说就是一个项目仓库方面的网站，也有其他的一些服务，更多的内容不多赘述，现在我们要做的就是把本地的网站项目链接到这个网站上的一个仓库中，并且使用仓库的自动流功能自动部署，这样每次完成网站的更新后就可以将更改推送到远程仓库并由仓库自动完成部署。\n首选需要对git进行配置，运行以下指令：\ngit config --global user.email \u0026#34;邮箱\u0026#34;\rgit config --global user.name 用户名 然后运行以下指令：\nssh-keygen -t rsa -C \u0026#34;xxxxxx@outlook.com\u0026#34; 双引号内的内容更换为自己的邮箱，保留双引号。此时系统中会生成一个用于验证身份的密钥，后续会询问密钥存储位置和加密指令，如果不需要的话可以按几下回车跳过。\n注意！密钥的公钥和私钥是验证身份用的，如果珍惜账号，以及仓库内的内容，请勿随意泄露，丢失可以重新生成，泄露了需要在账号后台中及时取消密钥可用性，确保账号安全。\n现在登陆github网站，点击右上角头像，选择Settings，在左侧的\u0026quot;SSH and GPG keys\u0026quot;中点击\u0026quot;New SSH key\u0026quot;，在\u0026quot;Title\u0026quot;中为密钥填写一个名称，然后将默认位置为\u0026quot;C:\\Users\\用户名\\.ssh\\id_rsa.pub\u0026quot;中的内容以记事本打开，并将内容粘贴到\u0026quot;Key\u0026quot;中，保存。\n如果想作废某个身份凭证来这里删除key就可以。\n现在点击左上角的猫头，左侧仓库选择\u0026quot;New\u0026quot;，新建两个仓库。\n第一个仓库名称一定是\u0026quot;用户名.github.io\u0026quot;，公开(Public)表示，只有这样命名才表示这是用户的一个个人网站，只有公开仓库对外展示的内容会放在这里，建议选择不添加README.md，建立完成后来到项目的设置页面，在Pages选项卡中将Branch下的None更改为main。\n第二个仓库可以随意命名，建议私有(Private)表示，这里是施工现场，如果公开表示可能会有不想公开的内容泄露，因此一般私有，如果没有有价值内容，用户认为公开无所谓，那也行，同样建议选择不添加README.md。\n同样点击右上角来到个人设置，拖到页面最低端，点击左侧\u0026quot;Developer settings\u0026quot;，在下面的\u0026quot;Personal access tokens\u0026quot;下选择\u0026quot;Fine-grained tokens\u0026quot;点击右上角\u0026quot;Generate new token\u0026quot;生成新令牌，注意该令牌需要绝对保密。\n在之后的令牌名输入一个好记的令牌名，我用的是\u0026quot;Github page action token\u0026quot;，默认三十天旗下可以更改为无限期(No expiration)，可访问仓库(Repository access)更改为第三个仅选择的仓库(Only select repositories)，之后选择公开的仓库，也就是\u0026quot;用户名.github.io\u0026quot;的仓库，并在下面的仓库权限(Repositories permissions)将目录(Contents)更改为允许读写(Read and Write)。\n设置完成后生成仓库并且复制得到的key，关闭页面后是看不到这个key的，回到项目仓库的设置，在秘密和变量(Secrets and variables)的action中新建一个仓库秘密(New repository secret)，填写一个好记的名称并且在下面粘贴刚刚生成的公有仓库的key，此时该私有项目仓库就有了读写公有网站仓库的权限，之后网站的更新可以完全在私有的环境下部署到公开站点。\n在本地文件系统的项目中新建 .github 文件夹，在其中新建一个 hugo.yaml 的文本文件，复制以下内容进去：\nname: GitHub Pages\ron:\rpush:\rbranches:\r- main # Set a branch to deploy\rpull_request:\rjobs:\rdeploy:\rruns-on: ubuntu-22.04\rconcurrency:\rgroup: ${{ github.workflow }}-${{ github.ref }}\rsteps:\r- uses: actions/checkout@v4\rwith:\rsubmodules: true # Fetch Hugo themes (true OR recursive)\rfetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod\r- name: Setup Hugo\ruses: peaceiris/actions-hugo@v3\rwith:\rhugo-version: \u0026#39;latest\u0026#39;\rextended: true\r- name: Build\rrun: hugo --minify\r- name: Deploy\ruses: peaceiris/actions-gh-pages@v3\rif: github.ref == \u0026#39;refs/heads/main\u0026#39;\rwith:\rpersonal_token: ${{ secrets.Deploy }}\rexternal_repository: Meirgoo/Meirgoo.github.io\rkeep_files: false\rpublish_branch: main\rpublish_dir: ./public\rcname: 在这里需要修改部分内容，将personnal_token后面的secrets.Deploy的\u0026quot;Deploy\u0026quot;部分更改为刚刚你设置好的仓库访问令牌名称，目标仓库(external_repository)后面的内容更改为 用户名/用户名.gtihub.io 最后的cname需要填写自己的域名，如果没有自己的域名可以写 用户名.github.io 。\n现在来到施工现场的仓库，可以看到一些指令提示，不用管，说明目前仓库中没有内容，回到powershell中，确定路径是网站根项目文件夹，依次运行施工现场底部三条指令，为项目添加一个远程源，然后运行指令：\ngit add .\rgit commit -m \u0026#34;init\u0026#34;\rgit push 这些指令的意思是，将所有文件添加到更改，提交并且备注\u0026quot;init\u0026quot;，注意提交后不等于提交到远程仓库，push才是推送到远程仓库。\n如果顺利的话，就可以在建立的私有项目中看到文件，等待几分钟后可以在公有项目中看到生成好的文件，此时可以尝试通过 用户名.github.io 进行访问。\n现在已经完成了网站的建立，那么怎么完成内容更新呢？同样采用类似的方式，只是比起完整建站简单的多。\n回到网站根项目中，可以看到一个\u0026quot;content\u0026quot;文件夹，这个文件夹就是网站内容的存放位置，当然会根据网站主题的不同，目录组织方式有所不同，有些主题对文件结构有所要求，具体情况需要具体分析，hugo的内容主要是以Markdown语言构成的，想要添加一个新的md文件，需要在网站根目录下运行如下指令：\nhugo new ./content/文件名.md 然后可以打开这个文件进行编辑，这里推荐使用vscode方式，可以使用以下指令安装vscode：\nwinget install Microsoft.VisualStudioCode 打开文件编辑后，想要上传到网站，则需要类似于远程仓库初始化将本地项目上传到github，同样在网站根目录下运行指令：\ngit add .\rgit commit -m \u0026#34;update\u0026#34;\rgit push 之后的内容就由Action自动渲染发布。\n结语\r#\r这篇内容是我个人建立站点的全步骤，它当然不全，还有些是我比较个人化的内容或者没有完全理解的内容，例如DNS配置，域名购买，页面的进一步扩展，这些内容都需要我继续深入后才能写，目前还是比较粗糙的，我会随着其余内容的添加慢慢修改这篇内容。\n"},{"id":3,"href":"/docs/collection/website/","title":"站点收藏","section":"快速链接","content":"\rwebsite collect\r#\r一些有意思/有用的站点收藏。\n资源站\r#\r数学天地\r#\r由Eric Weisstein创建的线上数学百科全书。\n中文站：https://mathworld.net.cn/\n英文站：https://mathworld.wolfram.com/\n音乐谱系图\r#\r可视化的现代音乐历史和继承关系站点（全英）。\nhttps://musicmap.info/\n编程语言速查\r#\r面向开发人员的大多数编程语言相关知识速查，不过普遍篇幅不长，并不怎么适合深入一门语言。\n源项目：https://github.com/Fechin/reference\n源站点：https://cheatsheets.zip/\n一个中文翻译站点（类似的有多个已部署项目）：https://quickref.cn/\n工具站\r#\r哔哩哔哩视频下载\r#\r新站好像支持抖音了，具体这个站点发展方向再看吧，我个人觉得这个站点前景不是特别明朗。\nhttps://xbeibeix.com/api/bilibili/\n在线接短信\r#\r前两年注册ChatGPT时候用的，注册海外服务基本没什么问题，价格也很便宜，国内可以直接访问，体验下来是个还不错的网站。\nhttps://sms-activate.org/cn 游戏\r#\r失落软件\r#\r收集1965-2013失落游戏媒体的网站。\nhttps://www.myabandonware.com/\nnikoli 日本实体谜题提供商 （英日）\r#\r一家来自日本的“实体”谜题游戏提供商，书啊之类的，不得不说这家公司网站呈现很符合我对日本公司的刻板印象，页面底端怎么还2001-2021呢，实体游戏大概是没必要去玩了。\nhttps://www.nikoli.co.jp/en/\nPennyDell 美国实体谜题提供商 （英）\r#\r类似于上一条，不过是美国加拿大地区的，只能说海外实体游戏还是和大多数国人无缘了。\nhttps://www.pennydellpuzzles.com/\nVinckensteiner 奥地利在线谜题 （英）\r#\r在线谜题，基本都是数独或者数独变种。\nhttps://raetsel.vinckensteiner.com/en/\nBrainBashers 英国在线谜题 （英）\r#\r在线谜题，种类多一些，但这个网站直观体验不太好，交互上一些东西可能不是那么直观。\nhttps://www.brainbashers.com/about.asp?25\njanko.at 德国(?)在线谜题 （德）\r#\r在线谜题，种类挺多，比较尴尬的是网站是德语，相对于英语可能会的少的多得多，并且好像部分谜题没有在线交互的方法，需要自己打印之类的，有在线交互的体验也比较一般。\nhttps://www.janko.at/Raetsel/index.htm\n康思 国际在线谜题\r#\r在线谜题，有网站和APP，最大的优点是支持中文，谜题种类多，不过GUI感觉一般，页面元素可以看到都是图片堆起来的，并且好像不登陆只能玩每周谜题，登陆了有什么不一样不清楚。\nhttps://www.conceptispuzzles.com/zh/index.aspx\n推箱子online 在线推箱子专场 （英）\r#\r应该是一家日本公司，基本都是推箱游戏，在线解谜嵌套层数略多。\nhttps://www.sokobanonline.com/\nincrepare games （英）\r#\r和前面的网站相比，这个网站离纯数学谜题（数独推箱之类）有点远了，而是更贴近现代电子游戏的在线形式，这个网站的作者或许名声不是特别大？但如果说最知名的作品史蒂芬的香肠卷，那喜欢解谜游戏的玩家应该多少都听说过。\nhttps://www.increpare.com/\n"},{"id":4,"href":"/docs/collection/script/","title":"脚本收藏","section":"快速链接","content":"\rScript\r#\r个人常用常见的一些脚本。\npowershell\r#\r文件批量重命名\r#\rGet-ChildItem *.epub | Rename-Item -Newname{ $_.Name -replace \u0026rsquo; - 未知\u0026rsquo;,\u0026rsquo;'}\n卸除windows内置应用，保留windows商店和AppInstaller\r#\rget-appxpackage|where{$.name -notmatch \u0026ldquo;Store\u0026rdquo;}|where{$.name -notmatch \u0026ldquo;Installer\u0026rdquo;}|remove-appxpackage\n恢复微软商店\r#\rGet-AppxPackage -AllUsers Microsoft.WindowsStore* | Foreach {Add-AppxPackage -DisableDevelopmentMode -Register \u0026ldquo;$($_.InstallLocation)\\AppXManifest.xml\u0026rdquo;}\n切换win11右键菜单\r#\rreg add \u0026#34;HKCU\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\\InprocServer32\u0026#34; /f /ve taskkill /f /im explorer.exe \u0026amp; start explorer.exe 切换win10右键菜单\r#\rreg delete \u0026#34;HKCU\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\u0026#34; /f taskkill /f /im explorer.exe \u0026amp; start explorer.exe 关闭 xbox game bar\r#\rreg add \u0026#34;HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\GameDVR\u0026#34; /v \u0026#34;AppCaptureEnabled\u0026#34; /t \u0026#34;REG_DWORD\u0026#34; /d \u0026#34;0\u0026#34; /f reg add \u0026#34;HKCU\\System\\GameConfigStore\u0026#34; /v \u0026#34;GameDVR_Enabled\u0026#34; /t \u0026#34;REG_DWORD\u0026#34; /d \u0026#34;0\u0026#34; /f "},{"id":5,"href":"/docs/collection/sigil/","title":"Sigil","section":"快速链接","content":"\rBook make\r#\r过去处理电子书用的脚本收藏，不是很多，也有一段时间没用了，以后做电子书可能会再添加调整，先这么放着吧。\n正则\r#\r中文语境下获取章节目录设置\r#\r//*[re:test(., \u0026#34;^\\s*(简介|内容简介|序|楔子|尾声|后记|番外|[第卷][0123456789一二三四五六七八九十零〇百千两]*[卷回部章节])\\s*([^课].*|)$\u0026#34;, \u0026#34;i\u0026#34;)] 行间距设置\r#\rp{ text-indent:2em;/* 中文小说段首必备两个字的缩进*/ line-height:1.5em; /*设置行间距，这样段落里面每一行之间的间距就有半个字体大小的间距*/ margin:1em 0; /*上下各有0.5em的外边距，这样段间距就是2em也就是2个字体大小，也可以设置成0.5em，看喜好 */ } 替换标签p为h2\r#\r\u0026lt;p\u0026gt;(\\s*(简介|内容简介|序|楔子|尾声|后记|番外|[第卷][0123456789一二三四五六七八九十零〇百千两]*[卷回部章节])\\s*([^课].*|))\u0026lt;/p\u0026gt; \u0026lt;h2\u0026gt;\\1\u0026lt;/h2\u0026gt; "}]